definitions:
- tag; they're the ones contained in these "[]"
- condition; follows the format "[key]=[value]"

how to use a tag:
tags are created using [], inside the brackets will be at least two values, the type of tag, and any arguments
e.g. ["label", "mylabelname"]

using colored text in "option" tags:
at the end of the string containing the choice add "@&*" followed by a valid css color

syntax:
- head; one argument, "title":String, sets the header text to "title"

- label; one argument, "name":String used in combination with any "goto", "gcond", or "option" tags

- sound; one argument, "name":String plays a sound using an HTML audio element with the id "name"

- sfx; same as sound, but for short sfx that don't need to disrupt the background music, these shouldn't loop

- img; one argument, "source":String shows the provided source image using the context_img element, should be used for locations and the book boss image

- location; one argument, "name":String, must be a valid key for the variable "main_dict", sends the user to another location in the current chapter

- chapter; two arguments, "number":String, "name":String, switches to the chapter number provided and loads the file with name "name"

- goto; one argument, "name":String goes to the label with name "name"

- inven, two arguments, "name":String, "value":String, sets the value that key "name" maps to in the player's inventory, replacing the old value with the "value" argument

- gcond; two arguments, "condition":condition, "names":Array, used to go to different paths based on if the player's inventory has an item with the specified value

- option; two arguments, "options":Array, "names":Array, gives the user a choice between options, the user is then sent to the label with the name matching the option chosen, options can have a color

- path; two arguments, "path":String, "value":String, sets a path in the path dict

- pgoto; two arguments, "condition":condition, "names":Array, acts like "gcond" but with paths

- interaction; ? arguments, starts an interaction that can be almost anything

interactions:
- combat; 2 arguments, "stats":dict, "name":String, "source":String, "coins":Number, "stats" must have the following attributes: "h","a","d","c","s", "source" must be a valid path to an image